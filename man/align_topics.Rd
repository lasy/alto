% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/align_topics.R
\name{align_topics}
\alias{align_topics}
\title{Align topics from distinct LDA models}
\usage{
align_topics(models, method = "product", ...)
}
\arguments{
\item{models}{(required) A list of LDA models object. Each list component
must be a list with two named entries, $gamma (containing mixed memberships)
and $beta (containing topic parameters in log sapce). See
\code{run_lda_models} for details.}

\item{method}{(required) Either \code{product} or \code{transport}, giving
two types of alignment strategies, using inner products between gamma vectors
or optimal transport between gamma-beta pairs, respectively. Defaults to
\code{product}.}

\item{...}{(optional) Further keyword arguments passed to the weight
function. For example, passing \code{reg = 10} when using the
\code{transport} method will use a regularization level fo 10 in the Sinkhorn
optimal transport algorithm.}
}
\value{
An object of class \code{alignment} providing the weights between
every pair of topics of each model pairs in the input edgelist
(\code{comparisons}).
}
\description{
This function takes a list of LDA models and returns an object of class
\code{alignment}. Each element in the models list must be itself a named
list, corresponding to the mixed memberships (\code{$gamma}) and topics
(\code{$beta}). The resulting alignment object can be plotted using `plot`
and its weights can be extracted using the `weights` accessor function. See
the documentation for class \code{alignment} for further details.
}
\details{
After topics are aligned, they are re-ordered such that topics connected
by high weights are ranked similarly within their respective models.

Finally, topic paths (sets of topics connected by high weights across
models) are identified and alignment diagnostics (topic refinement and
coherence scores) are computed. These variables are included to the
\code{topics} container of the returned \code{alignment}.

See the reference XXX for details on the alignment diagnostis.
}
\examples{
library(purrr)
data <- rmultinom(10, 20, rep(0.1, 20))
lda_params <- setNames(map(1:5, ~ list(k = .)), 1:5)
lda_models <- run_lda_models(data, lda_params)

alignment <- align_topics(lda_models)
alignment
plot(alignment)

plot(alignment, color_by = "refinement")
alignment <- align_topics(lda_models, method = "transport")
plot(alignment)
plot_beta(alignment)

align_topics(lda_models, comparisons = "all")

topics(alignment)
weights(alignment)
models(alignment)
}
\references{
XXX
}
\seealso{
alignment
}
