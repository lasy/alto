% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_alignment.R
\name{plot_beta}
\alias{plot_beta}
\title{Plot Topics Heatmap}
\usage{
plot_beta(
  x,
  models = "all",
  min_beta = 0.001,
  n_features = NULL,
  beta_aes = "size",
  color_by = "branch"
)
}
\arguments{
\item{models}{Which models to display in the heatmap? Defaults to
\code{"all"}, meaning that all models are shown. If given \code{"last"}, only
the last model in the models list will be plotted. If given a vector of
characters, it will plot only models whose names in the original models list
match. Similarly, if given a list of integers, only the models lying at those
indices in the original model list will be visualized.}

\item{min_beta}{(optional, default = 0.025) if \code{add_leaves} is
\code{TRUE}, this option specifies the minimum beta value (i.e. proportion in
topic) for a feature to be displayed in the leaves.}

\item{n_features}{(optional) alternative to \code{min_beta}. if
\code{add_leaves} is \code{TRUE}, this option specifies the minimum beta
value (i.e. proportion in topic) for a feature to be displayed in the leaves.}
}
\description{
This function plots the \eqn{\beta_{kd}^{m}} topic parameters across models
\eqn{m}, topics \eqn{k}, and dimensions \eqn{d}. It takes as input a raw
alignment object and then returns a heatmap from the superheatmap package.
The shade of each cell corresponds to the value \eqn{\beta_{kd}^m} for the
model in panel \eqn{m}, topic in row \eqn{k}, and dimension in column
\eqn{d}. The plot can be restricted to only a subset of models by using the
\code{models} argument, which may be either a vector of model names or
numeric indices into the list of models. The dimensions can be filtered by
using the \code{n_features} or \code{min_beta} arguments -- by default, only
dimensions with at least one topic satisfying \eqn{\beta_{kd}^m > 0.025} are
displayed.
}
\examples{
library(purrr)
data <- rmultinom(10, 20, rep(0.1, 20))
lda_params <- setNames(map(1:5, ~ list(k = .)), 1:5)
lda_models <- run_lda_models(data, lda_params)
alignment <- align_topics(lda_models)
plot_beta(alignment)
plot_beta(alignment, min_beta = 0)
plot_beta(alignment, models = c(3, 4))
plot_beta(alignment, models = "last")

}
